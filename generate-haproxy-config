#!/usr/bin/env ruby

require 'erb'

def usage(error = nil)
  puts "ERROR: #{error}" if error
  puts "Usage: #{$0} <local_port> <remote_host> [remote_port]"
  puts
  exit(1)
end

# Check arguments
usage if ARGV.empty?
usage "Invalid params count!" if ARGV.count < 2 || ARGV.count > 3

# Extract arguments
local_port, remote_host, remote_port = ARGV

# Read template and render it
template = DATA.read
erb = ERB.new(template)
puts erb.result(binding)

exit(0)

__END__
### VMware Horizon View LoadBalancer vApp

global
		log 127.0.0.1   local0
		log 127.0.0.1   local1 notice
		pidfile /var/run/haproxy.pid
		maxconn 4096
		user haproxy
		group haproxy
		daemon
		stats socket /var/run/haproxy.stat mode 600

defaults
		log     global
		mode    tcp
		option  tcplog
		option  dontlognull
		retries 3
		option redispatch
		maxconn 3000
		timeout http-request 10s
		timeout queue 1m
		timeout connect 10s
		timeout client 1m
		timeout server 1m
		timeout http-keep-alive 10s
		timeout check 10s


userlist UsersFor_HAProxyStatistics
	group admin users haproxy
	user haproxy insecure-password HA@VmView5
	user stats insecure-password letmein
		
listen stats *:1936 
		mode http
		stats enable
		#stats scope http
		#stats scope www
		#stats scope static  
		#stats scope static_httpclose  
		#stats realm Haproxy\ Statistics  
		stats uri /haproxy?stats
		#stats auth haproxy:HA@VmView5
		stats refresh	20s
		stats show-node
		stats show-legends
		acl AuthOkay_ReadOnly http_auth(UsersFor_HAProxyStatistics)
		acl AuthOkay_Admin http_auth_group(UsersFor_HAProxyStatistics) admin
		stats http-request auth realm HAProxy-Statistics unless AuthOkay_ReadOnly
		stats admin if AuthOkay_Admin

#--------------FRONTEND-----------------------------------------------
#---------------------------------------------------------------------
# redirect http to https as View Security Servers don't listen on 80
# change URL to the DNS name your users use to connect to View
#---------------------------------------------------------------------
frontend inbound-http *:80
	mode http
	redirect location https://desktop.example.com/
	option http-server-close
	option forwardfor except 127.0.0.0/8
	option 	httplog
#---------------------------------------------------------------------
# listen for View HTTPS inbound
# use OpenSSL to create cert request, import .pem, uncomment #ssl crt
#---------------------------------------------------------------------
frontend inbound-https
	bind :443 #ssl crt ./my_view_cert.pem
	mode tcp
	option tcplog
	default_backend view_https
	
#---------------------------------------------------------------------
# listen for View PCoIP inbound <- ignore, we don't blanace UDP
# PCoIP Secure Gateway Config will tell client which broker to talk to
#---------------------------------------------------------------------
#frontend inbound-pcoip
#	bind :4172
#	mode tcp
#	default_backend view_pcoip
	
#---------------------------------------------------------------------
# listen for View RDP inbound
#---------------------------------------------------------------------
#frontend inbound-rdp
#	bind :3389
#	mode tcp
#	default_backend view_rdp
        
#-----------BACKEND---------------------------------------------------
#---------------------------------------------------------------------
# Define your View Security or Connection Servers here
#---------------------------------------------------------------------
backend view_https		
	mode tcp
	option tcplog
	option ssl-hello-chk #make sure we can talk SSL, not just TCP
	balance source
	#-- Balance roundrobin with stickyness with 3 lines below------------
	#balance roundrobin
	#stick store-request src
	#stick-table type ip size 200k expire 30m
	#---------------------------------------------------------------------
	# Add View Security and/or Connection Servers below and uncomment
	#---------------------------------------------------------------------
	#server ALIAS HOSTNAME_OR_IP:443 check id 1 inter 10s rise 5 fall 2
	#server ALIAS HOSTNAME_OR_IP:443 check id 2 inter 10s rise 5 fall 2
	#server ALIAS HOSTNAME_OR_IP:443 check id 3 inter 10s rise 5 fall 2

#backend view_pcoip
#	mode tcp
#	option tcplog
#	balance roundrobin
#---Next link sticks clients that enter through https-backend on same server
	stick match src table view_https
	#---------------------------------------------------------------------
	# Add View Security and/or Connection Servers below and uncomment
	#---------------------------------------------------------------------
	#server ALIAS HOSTNAME_OR_IP:4172 check id 1
	#server ALIAS HOSTNAME_OR_IP:4172 check id 2
	#server ALIAS HOSTNAME_OR_IP:4172 check id 3
	
#backend view_rdp
#	mode tcp
#	option tcplog
#	balance roundrobin
#	stick-table type ip size 200k expire 30m
#	stick on src
	#---------------------------------------------------------------------
	# Add View Security and/or Connection Servers below and uncomment
	#---------------------------------------------------------------------
	#server ALIAS HOSTNAME_OR_IP:4172 check id 1
	#server ALIAS HOSTNAME_OR_IP:4172 check id 2
	#server ALIAS HOSTNAME_OR_IP:4172 check id 3
